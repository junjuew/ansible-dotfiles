---
# A bunch of better cli utilities for common day tasks

# xclip
- name: install xclip
  package:
      name: xclip
      state: latest
  become: true

# direnv
# automatically set directory-based
# project specific configurations
# https://direnv.net/
- name: install direnv
  package:
      name: direnv
      state: present
  become: true

# fzf
# https://github.com/junegunn/fzf
# fuzzy command line finder
- include_tasks: fzf.yml
  tags: fzf

# fpp
# facebook pathpicker
# https://github.com/facebook/PathPicker
- include_tasks: pathpicker.yml
  tags: pathpicker

# install nix package manager
- name: check if nix exits
  shell: bash -lc "command -v nix-env > /dev/null 2>&1"
  args:
      executable: /bin/bash
  register: nix_installed
  ignore_errors: true

- name: install nix
  shell: >
      sh <(curl https://nixos.org/releases/nix/nix-2.2.2/install)
  args:
      executable: /bin/bash
  when: nix_installed is failed

# lazygit
- name: add lazygit apt repository
  apt_repository:
      repo: ppa:lazygit-team/release
      state: present
  become: true

- name: install lazygit
  package: name=lazygit state=latest
  become: true

# fasd
- name: remove fasd apt repository
  apt_repository:
      repo: ppa:aacebedo/fasd
      state: absent
  become: true

- name: remove fasd installed from apt
  package: name=fasd state=absent
  become: true

- name: install fasd from snap
  snap:
      name: fasd
      channel: beta
  become: true

# bat
# -lc needed to source .profile for nix-env definition
- name: install bat
  shell: >
      bash -lc "nix-env -f '<nixpkgs>' -iA bat"
  args:
      executable: /bin/bash

# ranger
- name: install ranger
  package: name=ranger state=latest
  become: true

# fd
- name: install fd
  shell: >
      bash -lc "nix-env -f '<nixpkgs>' -iA fd"
  args:
      executable: /bin/bash

# ripgrep
- name: install ripgrep
  shell: >
      bash -lc  "nix-env -f '<nixpkgs>' -iA ripgrep"
  args:
      executable: /bin/bash

# trash-cli
- name: install trash-cli
  package: name=trash-cli state=latest
  become: true

# exa
- name: install exa
  shell: >
      bash -lc "nix-env -f '<nixpkgs>' -iA exa"
  args:
      executable: /bin/bash

# snap
- name: install snap
  package: name=snapd state=latest
  become: true

# tldr
- name: Install tldr
  package: name=tldr state=latest
  become: true

# atool
- name: install atool
  package: name=atool state=latest
  become: true

# dstat for machine introspection
- name: install dstat
  package: name=dstat state=latest
  become: true
