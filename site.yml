---
# This playbook deploys the whole application stack in this site.

# need to install python 2 since ansible by default uses python2 as interpreter
# see: https://github.com/ansible/ansible/issues/17081
- hosts: all
  gather_facts: False 
  tasks:
  - name: install python 2 if not installed
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal python-apt python-pip)
    become: true
  tags: must_run

- name: create a user
  hosts: all
  roles:
    - user
  tags: user_setup

- name: apply common configuration to all nodes
  hosts: all
  roles:
    - common

- name: deploying servers
  hosts: server
  roles:
    - bash
    - fish
    - tmux

- name: apply basic, advanced, and gui to desktops
  hosts: desktop
  roles:
    - bash
    - fish
    - { role: tmux, tags: ['tmux'] }
    - gui

- name: install gpu drivers
  hosts: gpu
  vars:
    gpu: true
    cuda_packages:
      - cuda-9-0
  roles:
    - { role: CSCfi.cuda, become: true }

- name: install packages needed for cv
  hosts: cv
  roles:
    - { role: conda, tags: ['conda'] }
    - { role: tensorflow-object-detection-api, tags: ['tensorflow'] }

- name: install packages needed for kvm-host
  hosts: kvm-host
  roles:
    - kvm

- name: install docker packages
  hosts: docker-host
  tasks:
    - include_role:
        name: geerlingguy.docker
      vars: 
        docker_package: "docker-ce=18.03.1~ce-0~ubuntu"
        docker_package_state: present
        docker_users: 
          - "{{ ansible_env.USER }}"
        ansible_become: yes
      when: "ansible_distribution == 'Ubuntu'"

- name: install nvidia-docker
  hosts: nvidia-docker-host
  tasks:
    - include_role:
        name: nvidia-docker
      vars:
        nvidia_docker_version: '2.0.3'
        nvidia_docker_docker_version: '18.03.1'
        ansible_become: yes
      when: "ansible_distribution == 'Ubuntu'"