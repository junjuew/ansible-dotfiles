---
# This playbook deploys the whole application stack in this site.

# need to install python 2 since ansible by default uses python2 as interpreter
# see: https://github.com/ansible/ansible/issues/17081
- hosts: all
  gather_facts: False
  tasks:
    - name: install python 2 if not installed
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal python-apt python-pip)
      become: true
  tags: must_run

- name: create a user
  hosts: all
  roles:
    - user
  tags: user_setup

- name: apply common configuration to all nodes
  hosts: all
  roles:
    - common

- name: deploying servers
  hosts: server
  roles:
    - bash
    - { role: fish, tags: "fish" }
    - { role: better-cli-utils, tags: "better-cli-utils"}
    - { role: tmux, tags: ["tmux"] }

- name: apply basic, advanced, and gui to desktops
  hosts: desktop
  roles:
    - bash
    - { role: fish, tags: "fish" }
    - { role: tmux, tags: ["tmux"] }
    - gui
    - { role: better-cli-utils, tags: "better-cli-utils"}

- name: install desktop dev environment
  hosts: dev-desktop
  roles:
    - bash
    - { role: fish, tags: "fish" }
    - { role: better-cli-utils, tags: "better-cli-utils"}
    - { role: tmux, tags: ["tmux"] }
    - gui
    - { role: vscode, tags: ["vscode"] }

- name: install gpu drivers, cuda, and cudnn
  hosts: gpu
  tasks:
    - name: install cuda
      include_role:
        name: CSCfi.cuda
      vars:
        gpu: true
        cuda_packages:
          - cuda-9-0
        ansible_become: yes
    - name: install cudnn
      include_role:
        name: cudnn
      vars:
        ubuntu_version: 1604
        cudnn_major_version: 7
        cudnn_minor_version: 7.1.4.18
        cuda_version: 9.0
        remove_other_versions: true

- name: install packages needed for cv
  hosts: cv
  roles:
    - { role: conda, tags: ["conda"] }
    - { role: tensorflow-object-detection-api, tags: ["tensorflow"] }

- name: install packages needed for kvm-host
  hosts: kvm-host
  roles:
    - kvm
    - vagrant

- name: install docker packages
  hosts: docker-host
  tasks:
    - include_role:
        name: geerlingguy.docker
      vars:
        docker_package_state: present
        docker_users:
          - "{{ ansible_env.USER }}"
        ansible_become: yes
      when: ("ansible_distribution == 'Ubuntu'") and ("ansible_distribution_release == 'xenial'")

- name: install nvidia-docker
  hosts: nvidia-docker-host
  tasks:
    - include_role:
        name: nvidia-docker
      vars:
        ansible_become: yes
      when: "ansible_distribution == 'Ubuntu'"
